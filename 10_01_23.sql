--1
DECLARE
    V_EMPNO INT;
    V_ENAME VARCHAR2(10);
    V_SAL NUMBER(7,2);
    CURSOR MODSAL IS
    SELECT EMPNO, ENAME, SAL FROM EMP;
BEGIN
    OPEN MODSAL;
    LOOP
        FETCH MODSAL INTO V_EMPNO, V_ENAME ,V_SAL;
        EXIT WHEN MODSAL%NOTFOUND;
        IF V_SAL>1000 AND V_SAL<1000 THEN
            BEGIN
                DBMS_OUTPUT.PUT_LINE(V_ENAME || ' NIE DOSTAL PODWYZKI');
            END;
        ELSE
            BEGIN
               IF V_SAL < 1000 THEN
                   BEGIN
                       UPDATE EMP SET SAL = V_SAL + (V_SAL * 0.1) WHERE EMPNO = V_EMPNO;
                       DBMS_OUTPUT.PUT_LINE(V_ENAME || ' DOSTAL PODWYZKE');
                   END;
               ELSIF V_SAL > 1500 THEN
                   BEGIN
                       UPDATE EMP SET SAL = V_SAL - (V_SAL * 0.1) WHERE EMPNO = V_EMPNO;
                       DBMS_OUTPUT.PUT_LINE(V_ENAME || ' DOSTAL OBNIZKE');
                   END;
               end if;
            END;
        end if;
    END LOOP;
    CLOSE MODSAL;
END;

--2
CREATE OR REPLACE PROCEDURE MODSALPROCEDURE(V_MINSAL NUMBER,V_MAXSAL NUMBER) IS
    V_EMPNO INT;
    V_ENAME VARCHAR2(10);
    V_SAL NUMBER(7,2);
    CURSOR MODSAL IS
    SELECT EMPNO, ENAME, SAL FROM EMP;
BEGIN
    OPEN MODSAL;
    LOOP
        FETCH MODSAL INTO V_EMPNO, V_ENAME ,V_SAL;
        EXIT WHEN MODSAL%NOTFOUND;
        IF V_SAL>V_MINSAL AND V_SAL<V_MINSAL THEN
            BEGIN
                DBMS_OUTPUT.PUT_LINE(V_ENAME || ' NIE DOSTAL PODWYZKI');
            END;
        ELSE
            BEGIN
               IF V_SAL < V_MINSAL THEN
                   BEGIN
                       UPDATE EMP SET SAL = V_SAL + (V_SAL * 0.1) WHERE EMPNO = V_EMPNO;
                       DBMS_OUTPUT.PUT_LINE(V_ENAME || ' DOSTAL PODWYZKE');
                   END;
               ELSIF V_SAL > V_MAXSAL THEN
                   BEGIN
                       UPDATE EMP SET SAL = V_SAL - (V_SAL * 0.1) WHERE EMPNO = V_EMPNO;
                       DBMS_OUTPUT.PUT_LINE(V_ENAME || ' DOSTAL OBNIZKE');
                   END;
               end if;
            END;
        end if;
    END LOOP;
    CLOSE MODSAL;
END;

CALL MODSALPROCEDURE(1000,1500);

--3
CREATE OR REPLACE PROCEDURE MODPROV(V_DEPTNO NUMBER) IS
    V_DEPTNOCOUNT NUMBER;
    V_AVGSAL NUMBER;
    V_EMPNO NUMBER;
    V_ENAME EMP.ENAME%TYPE;
    V_SAL NUMBER;
    V_COMM NUMBER;

    CURSOR MODPROV IS
    SELECT EMPNO, ENAME, SAL, COMM FROM EMP;
BEGIN
    SELECT COUNT(*) INTO V_DEPTNOCOUNT FROM EMP WHERE DEPTNO = V_DEPTNO;
    SELECT AVG(SAL) INTO V_AVGSAL FROM EMP WHERE DEPTNO = V_DEPTNO;

    IF V_DEPTNOCOUNT < 0 THEN
        RAISE_APPLICATION_ERROR(-20201,'PODANY NUMER DZIALU NIE ISTNIEJE!');
    ELSE
        OPEN MODPROV;
        LOOP
            FETCH MODPROV INTO V_EMPNO, V_ENAME, V_SAL, V_COMM;
            EXIT WHEN MODPROV%NOTFOUND;

            IF V_SAL < V_AVGSAL THEN
                BEGIN
                    UPDATE EMP SET COMM = 0.05*SAL WHERE EMPNO = V_EMPNO;
                    DBMS_OUTPUT.PUT_LINE(V_ENAME || ' DOSTAL COMM');
                END;
            ELSE
                BEGIN
                    DBMS_OUTPUT.PUT_LINE(V_ENAME || ' NIE DOSTAL COMM');
                END;
            end if;
        end loop;
    end if;
END;

CALL MODPROV(10);

--4
CREATE TABLE MAGAZYN(
    IDPOZYCJI INTEGER PRIMARY KEY,
    NAZWA VARCHAR(20),
    ILOSC INTEGER
);

INSERT INTO MAGAZYN(IDPOZYCJI, NAZWA, ILOSC)
VALUES(1,'JABLKA',400);

INSERT INTO MAGAZYN(IDPOZYCJI, NAZWA, ILOSC)
VALUES(2,'GRUSZKI',300);

INSERT INTO MAGAZYN(IDPOZYCJI, NAZWA, ILOSC)
VALUES(3,'BANANY',200);

INSERT INTO MAGAZYN(IDPOZYCJI, NAZWA, ILOSC)
VALUES(4,'AWOKADO',5);


-- UPDATE MAGAZYN SET ILOSC = 400
-- WHERE IDPOZYCJI = 1;
-- UPDATE MAGAZYN SET ILOSC = 300
-- WHERE IDPOZYCJI = 2;
-- UPDATE MAGAZYN SET ILOSC = 200
-- WHERE IDPOZYCJI = 3;
-- UPDATE MAGAZYN SET ILOSC = 5
-- WHERE IDPOZYCJI = 4;

CREATE OR REPLACE PROCEDURE DECREMENTBY5 IS
    IDMAX INT;
    MAXILOSC INT;
BEGIN
    SELECT MAX(ILOSC) INTO MAXILOSC FROM MAGAZYN;
    SELECT IDPOZYCJI INTO IDMAX FROM MAGAZYN WHERE ILOSC = MAXILOSC;

    IF MAXILOSC <= 5 THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20250,'BLAD - PODANA WARTOSC PRZEWYZSZA ILOSC TOWARU O MAKSYMALNEJ ILOSCI!');
        END;
    ELSE
        BEGIN
            UPDATE MAGAZYN SET ILOSC = ILOSC-5 WHERE IDPOZYCJI = IDMAX;
        END;
    END IF;
END;

CALL DECREMENTBY5();

--5
CREATE OR REPLACE PROCEDURE DECREMENTBYVALUE(V_INT NUMBER) IS
    IDMAX INT;
    MAXILOSC INT;
BEGIN
    SELECT MAX(ILOSC) INTO MAXILOSC FROM MAGAZYN;
    SELECT IDPOZYCJI INTO IDMAX FROM MAGAZYN WHERE ILOSC = MAXILOSC;

    IF MAXILOSC <= V_INT THEN
        BEGIN
            RAISE_APPLICATION_ERROR(-20250,'BLAD - PODANA WARTOSC PRZEWYZSZA ILOSC TOWARU O MAKSYMALNEJ ILOSCI!');
        END;
    ELSE
        BEGIN
            UPDATE MAGAZYN SET ILOSC = ILOSC-V_INT WHERE IDPOZYCJI = IDMAX;
        END;
    END IF;
END;

CALL DECREMENTBY5();